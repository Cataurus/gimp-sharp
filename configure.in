dnl Process this file with autoconf to produce a configure script.

AC_INIT(README)
AM_INIT_AUTOMAKE(gimp-sharp, 0.9)
AM_PROG_LIBTOOL
AM_CONFIG_HEADER(config.h)

dnl find and test the C compiler
AC_PROG_INSTALL
AC_PROG_MAKE_SET
      
VERSION="0.9"
AC_SUBST(VERSION)

AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" = "xno"; then
        AC_MSG_ERROR(['pkg-config' is not in your PATH.])
fi

AC_PATH_PROG(MONO, mono, no)
if test "x$PKG_CONFIG" = "xno"; then
        AC_MSG_ERROR(['mono' is not in your PATH.])
fi
AC_SUBST(MONO)

PKG_CHECK_MODULES(MONO, mono >= 1.1.13.6)
AC_SUBST(MONO_CFLAGS)
AC_SUBST(MONO_LIBS)

PKG_CHECK_MODULES(MONO_DEPENDENCY, mono, has_mono=true, has_mono=false)

if test "x$has_mono" = "xtrue"; then
    AC_PATH_PROG(RUNTIME, mono, no)
    AC_PATH_PROG(CSC, gmcs, no)
    LIB_PREFIX=.so
    LIB_SUFFIX=
else
AC_PATH_PROG(CSC, csc.exe, no)
if test x$CSC = "xno"; then
    AC_MSG_ERROR([You need to install either mono or .Net])
fi
fi

if test "x$OS" != "xWindows_NT"; then
    dnl set GIMP plug-in path

    dnl GIMPPLUGINDIR=/usr/local/lib/gimp/2.0/plug-ins

    GIMPPLUGINDIR=`gimptool-2.0 -n --install-admin README | head -1 | sed "s/\(.* \)\\(.*\\)/\2/g"`

    AC_SUBST(GIMPPLUGINDIR)
fi

AC_SUBST(CSC)

#
# Check if we want to build unit test plug-in.
#

unittest=no
AC_ARG_WITH(unittest,[  --with-unittest         build unittest plug-in (default-no)])
if test "x$with_unittest" == xyes; then
   unittest=yes
fi

#
# Check if we want to build the Paint.NET plug-in.
#

pdn=no
AC_ARG_WITH(pdn,[  --with-pdn              build Paint.NET plug-in (default-no)])
if test "x$with_pdn" == xyes; then
   pdn=yes
fi

#
# Check if we want to build ECW plug-in.
#

have_libecw=no
AC_ARG_WITH(libecw,  [  --without-ecw           do not build the ECW plug-in])
if test x$with_ecw != xno && test -z "$LIBECW"; then
  have_libecw=yes
  AC_CHECK_LIB(NCSEcw, NCSecwInit,
    [AC_CHECK_HEADER(NCSEcw.h,
      ECW='ecw$(EXEEXT)'; LIBECW='-lNCSEcw',
      [have_libecw="no (ECW header file not found)"])],
    [have_libecw="no (ECW library not found)"], -lNCSUtil -lNCSCnet)
fi

AC_SUBST(ECW)
AC_SUBST(LIBECW)

#
# Check if we want to build incomplete plug-ins
#

incomplete=no
AC_ARG_WITH(incomplete,[  --with-incomplete       build incomplete plug-ins (default-no)])
if test "x$with_incomplete" == xyes; then
   incomplete=yes
fi


AM_CONDITIONAL(BUILD_UNITTEST, test x$unittest = xyes)
AM_CONDITIONAL(BUILD_PDN, test x$pdn = xyes)
AM_CONDITIONAL(BUILD_INCOMPLETE, test x$incomplete = xyes)
AM_CONDITIONAL(BUILD_ECW, test x$have_libecw = xyes)

dnl read Makefile.in and write Makefile
AC_CONFIG_FILES([
Makefile lib/Makefile 
plug-ins/Makefile 
plug-ins/ecw/Makefile
plug-ins/KoalaPaint/Makefile
plug-ins/ncp/Makefile 
plug-ins/Ministeck/Makefile 
plug-ins/neo/Makefile
plug-ins/Pdn/Makefile 
plug-ins/PhotoshopActions/Makefile 
plug-ins/PicturePackage/Makefile 
plug-ins/Raindrops/Makefile 
plug-ins/Shatter/Makefile
plug-ins/SliceTool/Makefile 
plug-ins/Splitter/Makefile 
plug-ins/Swirlies/Makefile 
plug-ins/UnitTest/Makefile 
plug-ins/UpdateCheck/Makefile 
plug-ins/wbmp/Makefile
])

AC_OUTPUT

dnl Print a summary of features enabled/disabled:
AC_MSG_RESULT([
Building GIMP-SHARP with prefix=$prefix
GIMP-SHARP Features:
  Unit Tests	: $unittest
  Paint.NET	: $pdn
  Incomplete	: $incomplete
  ECW		: $have_libecw
]);
